class kNear{constructor(e,t){this.k=e,this.training=t||[],this.array_size=-1}dist(e,t){let r=0;return e.forEach(((e,a)=>{r+=Math.pow(e-t[a],2)})),Math.sqrt(r)}updateMax(e,t){let r=0;for(let e of t)r=Math.max(r,e.d);return r}mode(e){let t,r={},a=0;for(let n in e)r[e[n]]=(r[e[n]]||0)+1,r[e[n]]>a&&(a=r[e[n]],t=e[n]);return t}checkInput(e){if(Array.isArray(e))if(e.length>0)if("number"==typeof e[0]){if(!(this.array_size>-1))return this.array_size=e.length,!0;if(e.length==this.array_size)return!0;console.log(`ERROR: learn en classify verwachten een array met numbers van dezelfde lengte, je stuurt nu een array met lengte ${e.length}, terwijl je eerder lengte ${this.array_size} gebruikt hebt.`)}else console.log(`ERROR: learn en classify verwachten een array met numbers, je stuurt nu array met ${typeof e[0]}.`);else console.log("ERROR: learn en classify verwachten een array met numbers, je stuurt nu lege array.");else console.log(`ERROR: learn en classify verwachten een array met numbers, je stuurt nu geen array, maar ${typeof e}.`);return!1}learn(e,t){this.checkInput(e);let r={v:e,lab:t};this.training.push(r)}classify(e){this.checkInput(e);let t=[],r=0;for(let a of this.training){let n={d:this.dist(e,a.v),vote:a.lab};if(t.length<this.k)t.push(n),r=this.updateMax(r,t);else if(n.d<r){let e=!0,a=0;for(;e;)Number(t[a].d)===r?(t.splice(a,1,n),r=this.updateMax(r,t),e=!1):a<t.length-1?a++:e=!1}}let a=[];for(let e of t)a.push(e.vote);return this.mode(a)}save(){localStorage.setItem("training",JSON.stringify(this.training))}clear(){this.training=[],this.array_size=-1,localStorage.removeItem("training")}}
//# sourceMappingURL=index.32d82b5d.js.map
